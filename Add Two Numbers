# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1==None: return l2
        if l2==None: return l1
        dummy = ListNode(0)
        p = dummy
        carryflag = 0
        while l1 and l2:
            m = (l1.val+l2.val+carryflag)/10
            n = (l1.val+l2.val+carryflag)%10
            p.next = ListNode(n)
            l1 = l1.next
            l2 = l2.next
            p = p.next
            carryflag = m
        while l1:
            m = (l1.val+carryflag)/10
            n = (l1.val+carryflag)%10
            p.next = ListNode(n)
            l1 = l1.next
            p = p.next
            carryflag = m
        while l2:
            m = (l2.val+carryflag)/10
            n = (l2.val+carryflag)%10
            p.next = ListNode(n)
            l2 = l2.next
            p = p.next
            carryflag = m
        if carryflag==1:
            p.next = ListNode(1)
        return dummy.next
