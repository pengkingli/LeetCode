'''
注意考察的是节点号的奇偶
用两个指针分别指向奇偶的头，然后分成奇指针和偶指针，最后将两个合并，重要的是清除结束条件
时间复杂度O(n),空间复杂度O(1)
'''
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def oddEvenList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head==None or head.next==None:
            return head
        odd=odd_head=head
        even=even_head=head.next
        while even and even.next!=None:
            odd.next = even.next
            even.next = even.next.next
            odd = odd.next
            even = even.next
        odd.next = even_head
        return odd_head
